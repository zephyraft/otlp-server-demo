// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: collector/trace/v1/trace_service.proto

package io.opentelemetry.proto.collector.trace.v1;

public final class TraceServiceProto {
  private TraceServiceProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_collector_trace_v1_ExportTraceServiceRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opentelemetry_proto_collector_trace_v1_ExportTraceServiceRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_opentelemetry_proto_collector_trace_v1_ExportTraceServiceResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_opentelemetry_proto_collector_trace_v1_ExportTraceServiceResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n&collector/trace/v1/trace_service.proto" +
      "\022&opentelemetry.proto.collector.trace.v1" +
      "\032\024trace/v1/trace.proto\"`\n\031ExportTraceSer" +
      "viceRequest\022C\n\016resource_spans\030\001 \003(\0132+.op" +
      "entelemetry.proto.trace.v1.ResourceSpans" +
      "\"\034\n\032ExportTraceServiceResponse2\242\001\n\014Trace" +
      "Service\022\221\001\n\006Export\022A.opentelemetry.proto" +
      ".collector.trace.v1.ExportTraceServiceRe" +
      "quest\032B.opentelemetry.proto.collector.tr" +
      "ace.v1.ExportTraceServiceResponse\"\000Bs\n)i" +
      "o.opentelemetry.proto.collector.trace.v1" +
      "B\021TraceServiceProtoP\001Z1go.opentelemetry." +
      "io/proto/otlp/collector/trace/v1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.opentelemetry.proto.trace.v1.TraceProto.getDescriptor(),
        });
    internal_static_opentelemetry_proto_collector_trace_v1_ExportTraceServiceRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_opentelemetry_proto_collector_trace_v1_ExportTraceServiceRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opentelemetry_proto_collector_trace_v1_ExportTraceServiceRequest_descriptor,
        new java.lang.String[] { "ResourceSpans", });
    internal_static_opentelemetry_proto_collector_trace_v1_ExportTraceServiceResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_opentelemetry_proto_collector_trace_v1_ExportTraceServiceResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_opentelemetry_proto_collector_trace_v1_ExportTraceServiceResponse_descriptor,
        new java.lang.String[] { });
    io.opentelemetry.proto.trace.v1.TraceProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
